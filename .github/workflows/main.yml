# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: luacheck
        # You may pin to the exact commit or the version.
        # uses: nebularg/actions-luacheck@86af42dcf465915896671903fcdec3e01a492e87
        uses: nebularg/actions-luacheck@v1.1.0
        with:
          # A list of files, rockspecs, or directories to be checked.
          # Defaults to the workspace path as set by the `path` input.
          # files: . # optional, default is .
          
          # The working directory for luacheck.
          # The file list should be relative to this path and output filenames be displayed relative 
          # to this path.
          # Defaults to the workspace path.
          # path: ${{ github.workspace }}
          
          # Additional command-line arguments.
          # See https://luacheck.readthedocs.io/en/stable/cli.html
          # Optional
          args: "--globals memory"
          
          # URL to a custom configuration (`.luacheckrc`) file that will be used as the default
          # configuration file.
          # Optional
          # config: "" 
         
          # Emits annotations for source code at locations parsed from the output. 
          # Must be set to "none", "warning" or "error".
          # Requires that output of warnings not be suppressed through the -qq or -qqq arguments.
          annotate: "error" # optional, default is none
